{"version":3,"file":"breadcrumbs-metabox.min.js","mappings":"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","sources":["webpack://src/./src/js/hooks/useTaxonomies.ts","webpack://src/external window \"React\"","webpack://src/external window [\"wp\",\"components\"]","webpack://src/external window [\"wp\",\"compose\"]","webpack://src/external window [\"wp\",\"coreData\"]","webpack://src/external window [\"wp\",\"data\"]","webpack://src/external window [\"wp\",\"editPost\"]","webpack://src/external window [\"wp\",\"i18n\"]","webpack://src/external window [\"wp\",\"plugins\"]","webpack://src/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://src/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://src/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://src/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://src/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://src/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://src/webpack/bootstrap","webpack://src/webpack/runtime/compat get default export","webpack://src/webpack/runtime/define property getters","webpack://src/webpack/runtime/hasOwnProperty shorthand","webpack://src/webpack/runtime/make namespace object","webpack://src/./src/js/metaboxes/breadcrumbs.tsx"],"sourcesContent":["import {useSelect} from '@wordpress/data';\r\nimport {store as coreStore} from '@wordpress/core-data';\r\n\r\nexport const useTaxonomies = (postType) => {\r\n    return useSelect(\r\n        (select) => {\r\n            const {getTaxonomies} = select(coreStore);\r\n            const filteredTaxonomies = getTaxonomies({\r\n                type: postType,\r\n                per_page: -1,\r\n                context: 'view',\r\n            });\r\n            return filteredTaxonomies;\r\n        },\r\n        [postType]\r\n    );\r\n};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, {useEffect} from 'react';\r\nimport {registerPlugin} from '@wordpress/plugins';\r\nimport {PluginDocumentSettingPanel} from '@wordpress/edit-post';\r\nimport {compose} from '@wordpress/compose';\r\nimport {withSelect, withDispatch,} from '@wordpress/data';\r\nimport {SelectControl} from '@wordpress/components';\r\nimport {__} from '@wordpress/i18n';\r\nimport {useTaxonomies} from \"../hooks/useTaxonomies\";\r\n\r\nconst BreadcrumbsFields = (props) => {\r\n\r\n    const {postType, postMeta, postTerms, setPostMeta} = props;\r\n\r\n    const taxonomies = useTaxonomies(postType);\r\n\r\n    useEffect(() => {\r\n        if (!postTerms) {\r\n            return;\r\n        }\r\n\r\n        if (!postMeta?._df_breadcrumbs_term) {\r\n            return;\r\n        }\r\n\r\n        if (!postTerms?.length) {\r\n            setPostMeta({\r\n                _df_breadcrumbs_term: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const match = postTerms.some(term => term.id === postMeta._df_breadcrumbs_term);\r\n\r\n        if (!match) {\r\n            setPostMeta({\r\n                _df_breadcrumbs_term: null\r\n            });\r\n        }\r\n\r\n    }, [postTerms]);\r\n\r\n    if (!postType || postType === 'wp_template' || postType === 'wp_template_part') {\r\n        return '';\r\n    }\r\n\r\n    const handleChangeTaxonomy = (value: string) => {\r\n        setPostMeta(\r\n            {\r\n                _df_breadcrumbs_taxonomy_slug: value,\r\n                _df_breadcrumbs_taxonomy_rest: taxonomies.filter(tax => tax.slug === value)[0]?.rest_base,\r\n                _df_breadcrumbs_term: null\r\n            });\r\n    }\r\n\r\n    const handleChangeTerm = (value: string) => {\r\n        setPostMeta({_df_breadcrumbs_term: !!value ? parseInt(value) : null})\r\n    }\r\n\r\n    return (<PluginDocumentSettingPanel title={__('Breadcrumbs', 'digitfab-core')} initialOpen={false}>\r\n\r\n            <SelectControl\r\n                label={__('Taxonomy', 'digitfab-core')}\r\n                value={postMeta?._df_breadcrumbs_taxonomy_slug}\r\n                options={[\r\n                    {\r\n                        value: '',\r\n                        label: __('No', 'digitfab-core')\r\n                    },\r\n                    ...(taxonomies || []).map(tax => (\r\n                        {\r\n                            value: tax.slug,\r\n                            label: tax.name\r\n                        }\r\n                    ))\r\n                ]}\r\n                onChange={handleChangeTaxonomy}\r\n                disabled={!taxonomies?.length}\r\n            />\r\n\r\n            {\r\n                !!postMeta?._df_breadcrumbs_taxonomy_slug &&\r\n                <SelectControl\r\n                    label={__('Term', 'digitfab-core')}\r\n                    value={postMeta?._df_breadcrumbs_term}\r\n                    options={[\r\n                        {\r\n                            value: '',\r\n                            label: __('No', 'digitfab-core')\r\n                        },\r\n                        ...(postTerms || []).map(term => (\r\n                            {\r\n                                value: term.id,\r\n                                label: term.name\r\n                            }\r\n                        ))\r\n                    ]}\r\n                    onChange={handleChangeTerm}\r\n                    disabled={!taxonomies?.length}\r\n                />\r\n            }\r\n\r\n        </PluginDocumentSettingPanel>\r\n    )\r\n}\r\n\r\n// @ts-ignore\r\nconst BreadcrumbsMetaBox = compose([\r\n\r\n    withSelect((select) => {\r\n        const taxonomyRest = select('core/editor').getEditedPostAttribute('meta')['_df_breadcrumbs_taxonomy_rest'];\r\n        const taxonomySlug = select('core/editor').getEditedPostAttribute('meta')['_df_breadcrumbs_taxonomy_slug'];\r\n\r\n        const postTerms = select('core').getEntityRecords('taxonomy', taxonomySlug, {include: select('core/editor').getEditedPostAttribute(taxonomyRest)});\r\n\r\n        return {\r\n            postMeta: select('core/editor').getEditedPostAttribute('meta'),\r\n            postType: select('core/editor').getCurrentPostType(),\r\n            postTerms: postTerms,\r\n        };\r\n    }),\r\n\r\n    withDispatch((dispatch) => {\r\n        return {\r\n            setPostMeta(newMeta) {\r\n                dispatch('core/editor').editPost({meta: newMeta});\r\n            }\r\n        };\r\n    })\r\n])(BreadcrumbsFields);\r\n\r\nregisterPlugin('digitfab-breadcrumbs-metabox', {\r\n    render() {\r\n        // @ts-ignore\r\n        return (<BreadcrumbsMetaBox />);\r\n    }\r\n});"],"names":["useSelect","store","coreStore","useTaxonomies","postType","select","getTaxonomies","filteredTaxonomies","type","per_page","context","React","useEffect","registerPlugin","PluginDocumentSettingPanel","compose","withSelect","withDispatch","SelectControl","__","BreadcrumbsFields","props","postMeta","postTerms","setPostMeta","taxonomies","_df_breadcrumbs_term","length","match","some","term","id","handleChangeTaxonomy","value","_df_breadcrumbs_taxonomy_slug","_df_breadcrumbs_taxonomy_rest","filter","tax","slug","rest_base","handleChangeTerm","parseInt","label","map","name","BreadcrumbsMetaBox","taxonomyRest","getEditedPostAttribute","taxonomySlug","getEntityRecords","include","getCurrentPostType","dispatch","newMeta","editPost","meta","render"],"sourceRoot":""}